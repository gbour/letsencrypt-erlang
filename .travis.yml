sudo: required
dist: trusty

language: erlang
otp_release:
    - 22.2

services:
    - docker

addons:
    apt:
        packages:
            - elinks
            - rsyslog

env:
    global:
        - GOPATH=/tmp/go
        - PATH=$GOPATH/bin:$PATH

    #matrix:
        #- BOULDER_BUILD=https://acme-v01.api.letsencrypt.org/build
        #- BOULDER_BUILD=https://acme-staging.api.letsencrypt.org/build

# we only test boulder staging version against last OTP version
#matrix:
#    include:
#        - otp_release: 18.2.1
#          env: BOULDER_BUILD=https://acme-staging.api.letsencrypt.org/build


before_install:
    - wget https://raw.githubusercontent.com/letsencrypt/pebble/master/docker-compose.yml
    # disable invalid anti-replay nonce random errors
    - "sed -ie 's/\(GODEBUG:.*\)/\1\n      PEBBLE_WFE_NONCEREJECT: 0/' docker-compose.yml"

install:
    - ./rebar3 update
    - DEBUG=1 ./rebar3 compile

before_script:
    - docker-compose -f docker-compose.yml up > /tmp/pebble.log&
    - sleep 10
    - curl --request POST --data '{"ip":"10.30.50.1"}' http://localhost:8055/set-default-ipv4
#    # serve CA certificate
#    # TODO: replace by python SimpleHTTPServer
#    # NOTE: no need to serve CA anymore ?
#    - averell/averell -p 3099 -v $GOPATH/src/github.com/letsencrypt/boulder&
#    #
#    - cd $GOPATH/src/github.com/letsencrypt/boulder
#    # switch to prod/staging version
#    - REV=`elinks -dump $BOULDER_BUILD|sed -e "s/.*Boulder=(.*+\([0-9a-f]\+\) .*/\1/"`
#    - echo "using boulder rev +$REV"
#    - git checkout $REV
#    - git log -1
#    # prevent limiting certificates generation
#    - "sed -i 's/threshold: 5/threshold: 100/' test/rate-limit-policies.yml"
#    #- cat test/rate-limit-policies.yml
#    # we must set FAKE_DNS addr as localhost viewed by docker guest
#    - export DOCKER_IP=`ip addr show docker0|grep "inet "|sed -e "s/.*inet \([^ \/]\+\).*/\1/"`
#    - "sed -ie \"s/FAKE_DNS: .*/FAKE_DNS: $DOCKER_IP/g\" docker-compose.yml"
#    - cat docker-compose.yml
#    # running boulder server (in docker)
#    - ~/.local/bin/docker-compose up > /tmp/boulder.log&
#    - cd $TRAVIS_BUILD_DIR
#    # waiting for boulder being fully started
#    - r=1; while [ $r -ne 0 ] ; do elinks -dump http://localhost:4000/directory 2>/dev/null; r=$?; sleep 5; done

#
script:
    - make dialize
    #- http GET http://127.0.0.1:3099/test/test-ca.pem
    - ./rebar3 ct > /tmp/ct.log 2>&1
#
after_failure:
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/suite.log.html
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/letsencrypt_suite.test_*
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/unexpected_io.log.html
    - cat /tmp/pebble.log
    - cat /tmp/ct.log
#
after_success:
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/suite.log.html
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/letsencrypt_suite.test_*
#    - elinks -dump 1 _build/test/logs/ct_run.*/*/run.*/unexpected_io.log.html
    - cat /tmp/pebble.log
#
